package lar.telas;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import lar.entidade.Assertion;
import lar.negocio.TemplatesR2RML;
import lar.negocio.Transforma;
import static lar.telas.FrmGerarDumpPorArquivoR2RML.nomeArquivoTtl;
import lar.util.Functions;

/**
 *
 * @author renato
 */
public class FrmDumpByR2rml extends javax.swing.JFrame {

    /**
     * Creates new form FrmDumpByR2rml
     */
    public FrmDumpByR2rml() {
        initComponents();
        this.generateR2rmlFileCustom();
    }

    private void generateR2rmlFileCustom() {
        this.txtAreaR2RML.append(TemplatesR2RML.getPrefixies());
        generateClassMapping();
    }

    /**
     * Gera o mapeamento de classe
     */
    private void generateClassMapping() {
        String currentTable = "";
        String columns = "";
        final int VALUE = 2, TYPE = 1, TABLE = 1;

        //Aqui, otbém todas as colunas para montar a query.
        for (Assertion assertion : FrmPrincipal.assertionsList) {
            String[] colummTarget = assertion.getAlvo().split(", ");
            if (colummTarget[VALUE].contains("pk")) {
                FrmPrincipal.columnsToSQL += colummTarget[VALUE].substring(0, colummTarget[VALUE].lastIndexOf(" ")) + ", ";
            } else {
                FrmPrincipal.columnsToSQL += colummTarget[VALUE].substring(0, colummTarget[VALUE].lastIndexOf("]")) + ", "; //get columm name
            }
            currentTable = colummTarget[TABLE];
        }

        this.txtAreaR2RML.append(TemplatesR2RML.mapeaTabelaLogica(currentTable, FrmPrincipal.columnsToSQL));
        
        for (Assertion assertion : FrmPrincipal.assertionsList) {

            String[] vocabulary = assertion.getOrigem().split(", ");
            String[] alvo = assertion.getAlvo().split(", ");

            String alvo2 = alvo[VALUE].substring(0, alvo[VALUE].lastIndexOf("]")); //nome da coluna
            String origem2 = vocabulary[VALUE].substring(0, vocabulary[VALUE].lastIndexOf("]")); //vocabulário da ontologia

//            if(alvo[1].contains("Classes")){
            if (vocabulary[TYPE].contains("Classes")) {
                Functions.printTab("Gerando R2RML: dentro de if Classes");
                Functions.printTab("vacabulario > " + vocabulary[2]);

                String pk = "";
                if (vocabulary[2].contains("pk")) {
                    pk = vocabulary[2].substring(0, vocabulary[2].lastIndexOf(" "));;
                    columns += pk;
                }
                    

                // SE NÃO TIVE PK, TEM QUE SELECIONAR UMA COLUNA PARA SER
                this.txtAreaR2RML.append(TemplatesR2RML.mapeaSujeito(Functions.prefixoOD(), currentTable, pk));
            } else {
                columns += origem2;
            }
            if (alvo[1].contains("Datatype")) {
                this.txtAreaR2RML.append(TemplatesR2RML.mapeaPredicadoObjeto(Functions.prefixoOD(), alvo2, origem2));
            }
        }
    }

    public void salvaArquivo() {
        JFileChooser caixa_dialogo = new JFileChooser();
        int retorno = caixa_dialogo.showSaveDialog(this.txtAreaR2RML);

        if (retorno == JFileChooser.APPROVE_OPTION) {
            File arquivo = caixa_dialogo.getSelectedFile();
            try {
                BufferedWriter grava = new BufferedWriter(new FileWriter(arquivo));
                grava.write(this.txtAreaR2RML.getText());
                grava.close();
            } catch (IOException e) {
            }
        }
    }

    /**
     * Salva o arquivo ttl gerado na pasta temporária /tmp
     */
    public void salvaArquivoTemp() {
        nomeArquivoTtl = JOptionPane.showInputDialog(null, "Type a file ttl name", "*.ttl");

        File file = null;
        FileWriter out = null;
        try {
            file = new File("/tmp/" + nomeArquivoTtl);
            out = new FileWriter(file);
            out.write(this.txtAreaR2RML.getText());
            out.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaR2RML = new javax.swing.JTextArea();
        btnDump = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtAreaR2RML.setColumns(20);
        txtAreaR2RML.setRows(5);
        jScrollPane1.setViewportView(txtAreaR2RML);

        btnDump.setText("Dump");
        btnDump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDumpActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDump, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCancel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnSave)
                .addGap(80, 80, 80)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addComponent(btnDump)
                .addGap(89, 89, 89))
        );

        setSize(new java.awt.Dimension(700, 498));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.txtAreaR2RML.setText("");
        this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        salvaArquivoTemp();
        this.btnDump.setEnabled(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDumpActionPerformed
        new Transforma(nomeArquivoTtl, FrmChooseDatabase.bdSession);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDumpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDumpByR2rml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDumpByR2rml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDumpByR2rml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDumpByR2rml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDumpByR2rml().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDump;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaR2RML;
    // End of variables declaration//GEN-END:variables
}
